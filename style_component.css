/* -=========这里是比较通用的样式，能够在多个组件中使*/
/* -通常叠加在组件的样式之上 */

@font-face {
    font-family: "Impact";
    src: url(./fonts/zzz-eng.TTF) format("truetype");
    font-weight: normal
}

@font-face {
    font-family: "hongmengti";
    src: url(./fonts/zzz-chs.ttf) format("truetype");
    font-weight: bold
}

.font-num {
    font-family: Impact, "Microsoft YaHei", 微软雅黑, "MicrosoftJhengHei", 华文细黑, STHeiti, MingLiu, sans-serif;
    font-weight: 100;
}

.font-hongmeng {
    font-family: "Microsoft YaHei", 微软雅黑, "MicrosoftJhengHei", 华文细黑, STHeiti, MingLiu, sans-serif;
    font-weight: 1000;
    font-size: 0.93em;
}



.OO-parallelogram {
    transform: skew(-20deg);
    border-radius: 10px;
}

.OO-parallelogram>* {
    /* display: block; */
    transform: skew(20deg);
}

.OO-colunm {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
}

.OO-colunm-center {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: flex-start;
    width: 100%;
}

div.OO-colorfull-border {
    animation: huerotate 6s infinite linear;
    filter: hue-rotate(360deg);
}

@keyframes huerotate {
    0% {
        filter: hue-rotate(0deg);
    }

    100% {
        filter: hue-rotate(360deg);
    }
}


/* -=============组件样式，实现自定义组件的默认样式=============== */
s-chip {
    transform: skew(-20deg);
    position: relative;
    height: fit-content;
    align-items: center;
    z-index: 1;
}

s-chip p {
    display: block;
    transform: skew(20deg);
    width: fit-content;
    height: fit-content;
    white-space: nowrap;
    line-height: 1;
    margin: 10px 0px;
    font-weight: bold;
    transition: all 0.3s ease-in-out 0s;
}

s-chip[type=filled-tonal]{
    border: 1px solid var(--s-color-outline);
    color: var(--s-color-on-primary);
}

s-tooltip p {
    margin: 0;
    line-height: 1;
}

s-divider {
    width: 83%;
    margin: 10px 0;
}

s-card {
    height: 350px;
    margin: 6px 0;
    border-radius: 0px 30px 0px 30px;
}

s-tooltip>p {
    line-height: 1.2;
    word-wrap: break-word;
    max-width: 120px;
    overflow-wrap: break-word;
    white-space: normal;
    text-align: left;
}

img {
    -webkit-user-drag: none;
    -moz-user-drag: none;
    -ms-user-drag: none;
}

p {
    height: fit-content;
    width: fit-content;
}

.left-adhesive-button {
    /* background-color: black; */
    height: 45px;
    border-radius: 0px 25px 25px 0px;
    position: relative;
    padding: 13px;
    transition: all 0.3s ease-in-out 0s;
    transform: translateX(0px);
    width: 100%;
    margin-right: 40px;
}

.left-adhesive-button p{
    transform: translateX(20px);
}

.left-adhesive-button::before {
    content: "";
    position: absolute;
    top: 3px;
    bottom: 3px;
    left: -100px;
    right: 3px;
    border: 2px solid gray;
    border-radius: 0px 19px 19px 0px;
}

.left-adhesive-button[type='elevated']{
    background-color: var(--s-color-background);
    box-shadow: 0px 0px 0px 2px var(--s-color-primary);
    transform: translateX(-20px);
}

.left-adhesive-button[type='elevated'] p{
    transform: translateX(0px);
}

.right-adhesive-button {
    /* background-color: black; */
    height: 45px;
    border-radius: 25px 0px 0px 25px;
    position: relative;
    padding: 13px;
    transition: all 0.3s ease-in-out 0s;
    transform: translateX(0px);
    width: 100%;
    margin-left: 20%;
}

.right-adhesive-button p{
    transform: translateX(-20px);
}

.right-adhesive-button::before {
    content: "";
    position: absolute;
    top: 3px;
    bottom: 3px;
    left: 3px;
    right: -100px;
    border: 2px solid gray;
    border-radius: 19px 0px 0px 19px;
}

.right-adhesive-button[type='elevated']{
    background-color: var(--s-color-background);
    box-shadow: 0px 0px 0px 2.5px var(--s-color-primary);
    transform: translateX(20px);
}

.right-adhesive-button[type='elevated'] p{
    transform: translateX(0px);
}

.button-bar {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    align-content: center;
    margin: 10px 0;
    width: 83%;
    position: relative;
}

.button-bar-item {
    height: 40px;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    align-content: center;
    position: relative;
    padding: 0px 20px 0px 20px;
    /* 外边框 */
    border: 1px solid var(--s-color-outline);
}

.button-bar .button-bar-item:first-child {
    /* 这是一个左边是方形，右边有圆角的平行四边形 */
    border-radius: 0px 10px 10px 0px;
    transform: skew(-20deg);
    /* 将最左边裁剪掉 */
    clip-path: polygon(12px 0,100% 0,100% 100%,26px 100%);
}


.button-bar .button-bar-item:not(:first-child):not(:last-child) {
    /* 这是一个圆角平行四边形 */
    transform: skew(-20deg);
    border-radius: 10px;
    margin: 0 2px;
    width: fit-content;
    padding: 10px 20px;
    transition: all 0.3s ease-in-out 0s;
}

.button-bar .button-bar-item:last-child {
    /* 这是一个右边是方形，左边有圆角的平行四边形 */
    border-radius: 10px 0px 0px 10px;
    transform: skew(-20deg);
    /* 将最右边裁剪掉 */
    clip-path: polygon(0 0,calc(100% - 26px) 0,calc(100% - 13px) 100%,0 100%)
}

/* 使用 after 来绘制左侧的圆 */
.button-bar::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0px;
    border-radius: 20px 20px 20px 20px;
    border: 1px solid var(--s-color-outline);
    /* 裁剪掉中间部分，只显示两端 */
    clip-path: polygon(0 0,0 100%, 100% 100%,100% 0,calc(100% - 20px) 0,calc(100% - 20px) 100%,20px 100%,20px 0);
    /* background-color: var(--s-color-surface-container-high); */
}

.button-bar-item>* {
    transform: skew(20deg);
}

